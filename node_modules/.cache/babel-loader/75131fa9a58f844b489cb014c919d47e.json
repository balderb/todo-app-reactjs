{"ast":null,"code":"var _jsxFileName = \"/Users/balderbongaerts/Desktop/React todo app/connect git/todo-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Hero from \"./components/Hero\";\nimport Logo from \"./components/Logo\";\nimport List from \"./components/List\";\nimport Filter from \"./components/Filter\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst getLocalStorage = () => {\n  let items = localStorage.getItem(\"items\");\n\n  if (items) {\n    return JSON.parse(localStorage.getItem(\"items\"));\n  } else {\n    return [];\n  }\n};\n\nconst App = () => {\n  _s();\n\n  const [text, setText] = useState('');\n  const [items, setItems] = useState(getLocalStorage()); // define the custom handleSubmit here further, on this location\n\n  const handleSubmit = e => {\n    //  the preventDefault function prevents data to be passed through the address bar\n    e.preventDefault();\n    const newItems = {\n      id: uuidv4(),\n      title: text,\n      // here i think we need to add an additional feature \"completed\"\n      completed: false\n    };\n    setItems([newItems, ...items]);\n    setText(\"\");\n  };\n\n  const deleteItem = id => {\n    setItems(items.filter(item => item.id !== id));\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"items\", JSON.stringify(items));\n  }, [items]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Hero, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"flex items-center justify-center mt-10\",\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"py-2 px-5 rounded-lg\",\n          type: \"text\",\n          name: \"text\",\n          placeholder: \"Enter your todo item\",\n          autoComplete: \"off\",\n          value: text,\n          onChange: e => setText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        items: items,\n        deleteItem: deleteItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Filter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"pncfR7n2FHK6sda5fFQQrN0or0M=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/balderbongaerts/Desktop/React todo app/connect git/todo-app/src/App.js"],"names":["useState","useEffect","Hero","Logo","List","Filter","v4","uuidv4","getLocalStorage","items","localStorage","getItem","JSON","parse","App","text","setText","setItems","handleSubmit","e","preventDefault","newItems","id","title","completed","deleteItem","filter","item","setItem","stringify","target","value"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;;;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAC5B,MAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;;AAEA,MAAIF,KAAJ,EAAW;AACT,WAAOG,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAP;AACD,GAFD,MAEO;AACL,WAAO,EAAP;AACD;AACF,CARD;;AAUA,MAAMG,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,KAAD,EAAQQ,QAAR,IAAoBjB,QAAQ,CAACQ,eAAe,EAAhB,CAAlC,CAFgB,CAIhB;;AACA,QAAMU,YAAY,GAAIC,CAAD,IAAO;AAC1B;AACAA,IAAAA,CAAC,CAACC,cAAF;AAEC,UAAMC,QAAQ,GAAG;AAChBC,MAAAA,EAAE,EAAEf,MAAM,EADM;AAEhBgB,MAAAA,KAAK,EAAER,IAFS;AAGhB;AACAS,MAAAA,SAAS,EAAE;AAJK,KAAjB;AAMAP,IAAAA,QAAQ,CAAC,CAACI,QAAD,EAAW,GAAGZ,KAAd,CAAD,CAAR;AACAO,IAAAA,OAAO,CAAC,EAAD,CAAP;AACF,GAZD;;AAcA,QAAMS,UAAU,GAAIH,EAAD,IAAQ;AACzBL,IAAAA,QAAQ,CAACR,KAAK,CAACiB,MAAN,CAAcC,IAAD,IAASA,IAAI,CAACL,EAAL,KAAYA,EAAlC,CAAD,CAAR;AACD,GAFD;;AAIArB,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,YAAY,CAACkB,OAAb,CAAqB,OAArB,EAA8BhB,IAAI,CAACiB,SAAL,CAAepB,KAAf,CAA9B;AACD,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;AAIA,sBACE;AAAA,2BACE;AAAA,8BACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAM,QAAA,SAAS,EAAC,wCAAhB;AAAyD,QAAA,QAAQ,EAAGS,YAApE;AAAA,+BACE;AAAO,UAAA,SAAS,EAAC,sBAAjB;AAAwC,UAAA,IAAI,EAAC,MAA7C;AAAoD,UAAA,IAAI,EAAC,MAAzD;AAAgE,UAAA,WAAW,EAAC,sBAA5E;AAAmG,UAAA,YAAY,EAAC,KAAhH;AACA,UAAA,KAAK,EAAIH,IADT;AAEA,UAAA,QAAQ,EAAGI,CAAD,IAAOH,OAAO,CAACG,CAAC,CAACW,MAAF,CAASC,KAAV;AAFxB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAHF,eAWE,QAAC,IAAD;AAAM,QAAA,KAAK,EAAEtB,KAAb;AAAoB,QAAA,UAAU,EAAEgB;AAAhC;AAAA;AAAA;AAAA;AAAA,cAXF,eAaE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAmBD,CA9CD;;GAAMX,G;;KAAAA,G;AAgDN,eAAeA,GAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport Hero from \"./components/Hero\"\nimport Logo from \"./components/Logo\"\nimport List from \"./components/List\"\nimport Filter from \"./components/Filter\"\n\nimport { v4 as uuidv4 } from \"uuid\"\n\nconst getLocalStorage = () => {\n  let items = localStorage.getItem(\"items\")\n\n  if (items) {\n    return JSON.parse(localStorage.getItem(\"items\"))\n  } else {\n    return []\n  }\n}\n\nconst App = () => {\n  const [text, setText] = useState('')\n  const [items, setItems] = useState(getLocalStorage())\n\n  // define the custom handleSubmit here further, on this location\n  const handleSubmit = (e) => {\n    //  the preventDefault function prevents data to be passed through the address bar\n    e.preventDefault()\n    \n     const newItems = {\n      id: uuidv4(),\n      title: text,\n      // here i think we need to add an additional feature \"completed\"\n      completed: false \n     }\n     setItems([newItems, ...items])\n     setText(\"\")\n  }\n\n  const deleteItem = (id) => {\n    setItems(items.filter((item) =>item.id !== id))\n  }\n\n  useEffect(() => {\n    localStorage.setItem(\"items\", JSON.stringify(items))\n  }, [items])\n\n  return (\n    <>\n      <main>\n        <Logo/>\n        <Hero/>\n        <form className=\"flex items-center justify-center mt-10\" onSubmit={ handleSubmit }>\n          <input className=\"py-2 px-5 rounded-lg\" type=\"text\" name=\"text\" placeholder=\"Enter your todo item\" autoComplete=\"off\"\n          value= { text }\n          onChange={(e) => setText(e.target.value)}\n          >\n          </input>\n        </form>\n\n        <List items={items} deleteItem={deleteItem}/>\n\n        <Filter/>\n      </main>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}