{"ast":null,"code":"var _jsxFileName = \"/Users/balderbongaerts/Desktop/React todo app/5 nov repo/todo-app-reactjs/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Hero from \"./components/Hero\";\nimport Logo from \"./components/Logo\";\nimport List from \"./components/List\";\nimport Todo from './components/Todo';\nimport Form from './components/Form.jsx';\nimport FilterButton from './components/FilterButton';\nimport { v4 as uuidv4 } from \"uuid\";\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst getLocalStorage = () => {\n  let items = localStorage.getItem(\"items\");\n\n  if (items) {\n    return JSON.parse(localStorage.getItem(\"items\"));\n  } else {\n    return [];\n  }\n};\n\nconst App = props => {\n  _s();\n\n  const [text, setText] = useState('');\n  const [items, setItems] = useState(getLocalStorage());\n  const [tasks, setTasks] = useState(props.tasks);\n  const [filter, setFilter] = useState('All');\n\n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map(task => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        // use object spread to make a new object\n        // whose `completed` prop has been inverted\n        return { ...task,\n          completed: !task.completed\n        };\n      }\n\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n\n  function deleteTask(id) {\n    const remainingTasks = tasks.filter(task => id !== task.id);\n    setTasks(remainingTasks);\n  }\n\n  function editTask(id, newName) {\n    const editedTaskList = tasks.map(task => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        //\n        return { ...task,\n          name: newName\n        };\n      }\n\n      return task;\n    });\n    setTasks(editedTaskList);\n  }\n\n  function addTask(name) {\n    const newTask = {\n      id: \"todo-\" + nanoid(),\n      name: name,\n      completed: false\n    };\n    setTasks([...tasks, newTask]);\n  } // define the custom handleSubmit here further, on this location\n\n\n  const handleSubmit = e => {\n    //  the preventDefault function prevents data to be passed through the address bar\n    e.preventDefault();\n    const newItems = {\n      id: uuidv4(),\n      title: text // here i think we need to add an additional feature \"completed\"\n\n    };\n    setItems([newItems, ...items]);\n    setText(\"\");\n  };\n\n  const deleteItem = id => {\n    setItems(items.filter(item => item.id !== id));\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"items\", JSON.stringify(items));\n  }, [items]);\n  const taskList = tasks.map(task => /*#__PURE__*/_jsxDEV(Todo, {\n    id: task.id,\n    name: task.name,\n    completed: task.completed,\n    toggleTaskCompleted: toggleTaskCompleted,\n    deleteTask: deleteTask,\n    editTask: editTask\n  }, task.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this));\n  const tasksNoun = taskList.length !== 1 ? 'tasks' : 'task';\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Hero, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"flex items-center justify-center mt-10\",\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"py-2 px-5 rounded-lg\",\n          type: \"text\",\n          name: \"text\",\n          placeholder: \"Enter your todo item\",\n          autoComplete: \"off\",\n          value: text,\n          onChange: e => setText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        completed: false,\n        items: items,\n        deleteItem: deleteItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-lg font-bold pt-5\",\n        children: \"MDN docs helpsheet from here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"TodoMatic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        addTask: addTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filters btn-group stack-exceptions\",\n        children: [/*#__PURE__*/_jsxDEV(FilterButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FilterButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FilterButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        id: \"list-heading\",\n        children: headingText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: taskList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"lS58KJCbLOmaExrBQepdpBxnL7k=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/balderbongaerts/Desktop/React todo app/5 nov repo/todo-app-reactjs/src/App.js"],"names":["useState","useEffect","Hero","Logo","List","Todo","Form","FilterButton","v4","uuidv4","nanoid","getLocalStorage","items","localStorage","getItem","JSON","parse","App","props","text","setText","setItems","tasks","setTasks","filter","setFilter","toggleTaskCompleted","id","updatedTasks","map","task","completed","deleteTask","remainingTasks","editTask","newName","editedTaskList","name","addTask","newTask","handleSubmit","e","preventDefault","newItems","title","deleteItem","item","setItem","stringify","taskList","tasksNoun","length","headingText","target","value"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport Hero from \"./components/Hero\"\nimport Logo from \"./components/Logo\"\nimport List from \"./components/List\"\nimport Todo from './components/Todo'\nimport Form from './components/Form.jsx'\nimport FilterButton from './components/FilterButton';\nimport { v4 as uuidv4 } from \"uuid\"\nimport { nanoid } from \"nanoid\";\n\nconst getLocalStorage = () => {\n  let items = localStorage.getItem(\"items\")\n\n  if (items) {\n    return JSON.parse(localStorage.getItem(\"items\"))\n  } else {\n    return []\n  }\n}\n\nconst App = (props) => {\n  const [text, setText] = useState('')\n  const [items, setItems] = useState(getLocalStorage())\n  const [tasks, setTasks] = useState(props.tasks);\n  const [filter, setFilter] = useState('All');\n\n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map(task => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        // use object spread to make a new object\n        // whose `completed` prop has been inverted\n        return {...task, completed: !task.completed}\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n  \n  function deleteTask(id) {\n    const remainingTasks = tasks.filter(task => id !== task.id);\n    setTasks(remainingTasks);\n  }  \n  \n  function editTask(id, newName) {\n    const editedTaskList = tasks.map(task => {\n    // if this task has the same ID as the edited task\n      if (id === task.id) {\n        //\n        return {...task, name: newName}\n      }\n      return task;\n    });\n    setTasks(editedTaskList);\n  }\n\n  function addTask(name) {\n    const newTask = { id: \"todo-\" + nanoid(), name: name, completed: false };\n    setTasks([...tasks, newTask]);\n  }\n\n  // define the custom handleSubmit here further, on this location\n  const handleSubmit = (e) => {\n    //  the preventDefault function prevents data to be passed through the address bar\n    e.preventDefault()\n    \n     const newItems = {\n      id: uuidv4(),\n      title: text,\n      // here i think we need to add an additional feature \"completed\"\n     }\n     setItems([newItems, ...items])\n     setText(\"\")\n  }\n\n  const deleteItem = (id) => {\n    setItems(items.filter((item) =>item.id !== id))\n  }\n\n  useEffect(() => {\n    localStorage.setItem(\"items\", JSON.stringify(items))\n  }, [items])\n\n  const taskList = tasks.map(task => (\n    <Todo \n      id={task.id} \n      name={task.name} \n      completed={task.completed} \n      key={task.id}\n      toggleTaskCompleted={toggleTaskCompleted}\n      deleteTask={deleteTask}\n      editTask={editTask}\n      />\n    )\n  );\n\n  const tasksNoun = taskList.length !== 1 ? 'tasks' : 'task';\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\n\n  return (\n    <>\n      <main>\n        <Logo/>\n        <Hero/>\n        <form className=\"flex items-center justify-center mt-10\" onSubmit={ handleSubmit }>\n          <input className=\"py-2 px-5 rounded-lg\" type=\"text\" name=\"text\" placeholder=\"Enter your todo item\" autoComplete=\"off\"\n          value= { text }\n          onChange={(e) => setText(e.target.value)}\n          >\n          </input>\n        </form>\n\n        <List completed={false} items={items} deleteItem={deleteItem}/>\n\n        { /* mdn docs */ }  \n\n        <div className=\"text-lg font-bold pt-5\">MDN docs helpsheet from here</div>\n          <h1>TodoMatic</h1>\n          <Form addTask={addTask} />\n          <div className=\"filters btn-group stack-exceptions\">\n            <FilterButton/>\n            <FilterButton/>\n            <FilterButton/>\n          </div>\n          <h2 id=\"list-heading\">{headingText}</h2>\n        <ul>\n          { taskList }\n        </ul>\n      </main>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}